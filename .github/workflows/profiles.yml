# .github/workflows/dbt-ci.yml
# 1️⃣ Trigger: schedule + manual dispatch
on:
  schedule:           # nightly schedule, for example
    - cron:  '0 2 * * *'
  workflow_dispatch:  # ← this is the magic that adds “Run workflow”  in the UI

jobs:
  run-etl-and-dbt:
    runs-on: ubuntu-latest
    env:
      # Python script picks up these for Snowflake & SQL Server if you parameterize it:
      SQL_SERVER_DRIVER:   ${{ secrets.SQL_SERVER_DRIVER    }}
      SQL_SERVER_SERVER:   ${{ secrets.SQL_SERVER_SERVER    }}
      SQL_SERVER_DATABASE: ${{ secrets.SQL_SERVER_DATABASE  }}

      SNOWFLAKE_ACCOUNT:   ${{ secrets.SF_DEV_ACCOUNT      }}
      SNOWFLAKE_USER:      ${{ secrets.SF_DEV_USER         }}
      SNOWFLAKE_PASSWORD:  ${{ secrets.SF_DEV_PASSWORD     }}
      SNOWFLAKE_ROLE:      ${{ secrets.SF_DEV_ROLE         }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_DEV_WAREHOUSE    }}
      SNOWFLAKE_DATABASE:  ${{ secrets.SF_DEV_DATABASE     }}
      SNOWFLAKE_SCHEMA:    ${{ secrets.SF_DEV_SCHEMA       }}

      DBT_TARGET: dev

    steps:
    # 2️⃣ checkout your repo
    - name: Check out code
      uses: actions/checkout@v3

    # 3️⃣ set up Python
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # 4️⃣ install your Python deps
    - name: Install ETL script requirements
      run: |
        pip install pandas sqlalchemy pyodbc snowflake-connector-python snowflake-sqlalchemy

    # 5️⃣ run your incremental load
    - name: Run Python incremental loader
      run: |
        python DI/incremental_load_SQL_To_SF.py

    # 6️⃣ install dbt core + snowflake adapter
    - name: Install dbt
      run: |
        pip install dbt-core dbt-snowflake

    # 7️⃣ assemble ~/.dbt/profiles.yml from secrets
    - name: Configure dbt profiles.yml
      run: |
        mkdir -p ~/.dbt
        cat > ~/.dbt/profiles.yml <<EOF
    my_end_to_end_project:
      target: ${DBT_TARGET}
      outputs:
        dev:
          type: snowflake
          account:  "${SNOWFLAKE_ACCOUNT}"
          user:     "${SNOWFLAKE_USER}"
          password: "${SNOWFLAKE_PASSWORD}"
          role:     "${SNOWFLAKE_ROLE}"
          warehouse:"${SNOWFLAKE_WAREHOUSE}"
          database: "${SNOWFLAKE_DATABASE}"
          schema:   "${SNOWFLAKE_SCHEMA}"
          threads:  4

        prod:
          type: snowflake
          account:  "${{ secrets.SF_PROD_ACCOUNT }}"
          user:     "${{ secrets.SF_PROD_USER }}"
          password: "${{ secrets.SF_PROD_PASSWORD }}"
          role:     "${{ secrets.SF_PROD_ROLE }}"
          warehouse:"${{ secrets.SF_PROD_WAREHOUSE }}"
          database: "${{ secrets.SF_PROD_DATABASE }}"
          schema:   "${{ secrets.SF_PROD_SCHEMA }}"
          threads:  8
    EOF

    # 8️⃣ install any package deps (if you have a packages.yml)
    - name: dbt deps
      working-directory: my_end_to_end_project
      run: dbt deps --profiles-dir ~/.dbt --target ${DBT_TARGET}

    # 9️⃣ seed (if you use seeds)
    - name: dbt seed
      working-directory: my_end_to_end_project
      run: dbt seed --profiles-dir ~/.dbt --target ${DBT_TARGET}

    # 🔟 run your models
    - name: dbt run
      working-directory: my_end_to_end_project
      run: dbt run --profiles-dir ~/.dbt --target ${DBT_TARGET}

    # 1️⃣1️⃣ run tests
    - name: dbt test
      working-directory: my_end_to_end_project
      run: dbt test --profiles-dir ~/.dbt --target ${DBT_TARGET}
